// automatically generated by the FlatBuffers compiler, do not modify

package battlecode.schema;

import com.google.flatbuffers.BaseVector;
import com.google.flatbuffers.BooleanVector;
import com.google.flatbuffers.ByteVector;
import com.google.flatbuffers.Constants;
import com.google.flatbuffers.DoubleVector;
import com.google.flatbuffers.FlatBufferBuilder;
import com.google.flatbuffers.FloatVector;
import com.google.flatbuffers.IntVector;
import com.google.flatbuffers.LongVector;
import com.google.flatbuffers.ShortVector;
import com.google.flatbuffers.StringVector;
import com.google.flatbuffers.Struct;
import com.google.flatbuffers.Table;
import com.google.flatbuffers.UnionVector;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;

@SuppressWarnings("unused")
public final class InitialBodyTable extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_23_5_26(); }
  public static InitialBodyTable getRootAsInitialBodyTable(ByteBuffer _bb) { return getRootAsInitialBodyTable(_bb, new InitialBodyTable()); }
  public static InitialBodyTable getRootAsInitialBodyTable(ByteBuffer _bb, InitialBodyTable obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public InitialBodyTable __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public battlecode.schema.SpawnAction spawnActions(int j) { return spawnActions(new battlecode.schema.SpawnAction(), j); }
  public battlecode.schema.SpawnAction spawnActions(battlecode.schema.SpawnAction obj, int j) { int o = __offset(4); return o != 0 ? obj.__assign(__vector(o) + j * 8, bb) : null; }
  public int spawnActionsLength() { int o = __offset(4); return o != 0 ? __vector_len(o) : 0; }
  public battlecode.schema.SpawnAction.Vector spawnActionsVector() { return spawnActionsVector(new battlecode.schema.SpawnAction.Vector()); }
  public battlecode.schema.SpawnAction.Vector spawnActionsVector(battlecode.schema.SpawnAction.Vector obj) { int o = __offset(4); return o != 0 ? obj.__assign(__vector(o), 8, bb) : null; }

  public static int createInitialBodyTable(FlatBufferBuilder builder,
      int spawnActionsOffset) {
    builder.startTable(1);
    InitialBodyTable.addSpawnActions(builder, spawnActionsOffset);
    return InitialBodyTable.endInitialBodyTable(builder);
  }

  public static void startInitialBodyTable(FlatBufferBuilder builder) { builder.startTable(1); }
  public static void addSpawnActions(FlatBufferBuilder builder, int spawnActionsOffset) { builder.addOffset(0, spawnActionsOffset, 0); }
  public static void startSpawnActionsVector(FlatBufferBuilder builder, int numElems) { builder.startVector(8, numElems, 2); }
  public static int endInitialBodyTable(FlatBufferBuilder builder) {
    int o = builder.endTable();
    return o;
  }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public InitialBodyTable get(int j) { return get(new InitialBodyTable(), j); }
    public InitialBodyTable get(InitialBodyTable obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
}
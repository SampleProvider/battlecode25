"use strict";
// automatically generated by the FlatBuffers compiler, do not modify
Object.defineProperty(exports, "__esModule", { value: true });
exports.TimelineMarkerAction = void 0;
/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */
var flatbuffers = require("flatbuffers");
/**
 * Adds a marker to the timeline at the current round
 */
var TimelineMarkerAction = /** @class */ (function () {
    function TimelineMarkerAction() {
        this.bb = null;
        this.bb_pos = 0;
    }
    TimelineMarkerAction.prototype.__init = function (i, bb) {
        this.bb_pos = i;
        this.bb = bb;
        return this;
    };
    TimelineMarkerAction.getRootAsTimelineMarkerAction = function (bb, obj) {
        return (obj || new TimelineMarkerAction()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
    };
    TimelineMarkerAction.getSizePrefixedRootAsTimelineMarkerAction = function (bb, obj) {
        bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
        return (obj || new TimelineMarkerAction()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
    };
    TimelineMarkerAction.prototype.label = function (optionalEncoding) {
        var offset = this.bb.__offset(this.bb_pos, 4);
        return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
    };
    TimelineMarkerAction.startTimelineMarkerAction = function (builder) {
        builder.startObject(1);
    };
    TimelineMarkerAction.addLabel = function (builder, labelOffset) {
        builder.addFieldOffset(0, labelOffset, 0);
    };
    TimelineMarkerAction.endTimelineMarkerAction = function (builder) {
        var offset = builder.endObject();
        return offset;
    };
    TimelineMarkerAction.createTimelineMarkerAction = function (builder, labelOffset) {
        TimelineMarkerAction.startTimelineMarkerAction(builder);
        TimelineMarkerAction.addLabel(builder, labelOffset);
        return TimelineMarkerAction.endTimelineMarkerAction(builder);
    };
    return TimelineMarkerAction;
}());
exports.TimelineMarkerAction = TimelineMarkerAction;

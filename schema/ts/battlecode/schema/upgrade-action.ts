// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

/**
 * Visually indicate that a tower was upgraded
 */
export class UpgradeAction {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):UpgradeAction {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

/**
 * Id of the upgraded tower
 */
id():number {
  return this.bb!.readUint16(this.bb_pos);
}

newHealth():number {
  return this.bb!.readInt32(this.bb_pos + 4);
}

newMaxHealth():number {
  return this.bb!.readInt32(this.bb_pos + 8);
}

newPaint():number {
  return this.bb!.readInt32(this.bb_pos + 12);
}

newMaxPaint():number {
  return this.bb!.readInt32(this.bb_pos + 16);
}

static sizeOf():number {
  return 20;
}

static createUpgradeAction(builder:flatbuffers.Builder, id: number, newHealth: number, newMaxHealth: number, newPaint: number, newMaxPaint: number):flatbuffers.Offset {
  builder.prep(4, 20);
  builder.writeInt32(newMaxPaint);
  builder.writeInt32(newPaint);
  builder.writeInt32(newMaxHealth);
  builder.writeInt32(newHealth);
  builder.pad(2);
  builder.writeInt16(id);
  return builder.offset();
}

}

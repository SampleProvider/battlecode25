// automatically generated by the FlatBuffers compiler, do not modify

import * as flatbuffers from 'flatbuffers';

import { BuildActionType } from '../../battlecode/schema/build-action-type';


export class BuildActionMetadata {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):BuildActionMetadata {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsBuildActionMetadata(bb:flatbuffers.ByteBuffer, obj?:BuildActionMetadata):BuildActionMetadata {
  return (obj || new BuildActionMetadata()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsBuildActionMetadata(bb:flatbuffers.ByteBuffer, obj?:BuildActionMetadata):BuildActionMetadata {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new BuildActionMetadata()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

type():BuildActionType {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt8(this.bb_pos + offset) : BuildActionType.EXPLOSIVE_TRAP;
}

cost():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

buildCooldown():number {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

static startBuildActionMetadata(builder:flatbuffers.Builder) {
  builder.startObject(3);
}

static addType(builder:flatbuffers.Builder, type:BuildActionType) {
  builder.addFieldInt8(0, type, BuildActionType.EXPLOSIVE_TRAP);
}

static addCost(builder:flatbuffers.Builder, cost:number) {
  builder.addFieldInt32(1, cost, 0);
}

static addBuildCooldown(builder:flatbuffers.Builder, buildCooldown:number) {
  builder.addFieldInt32(2, buildCooldown, 0);
}

static endBuildActionMetadata(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createBuildActionMetadata(builder:flatbuffers.Builder, type:BuildActionType, cost:number, buildCooldown:number):flatbuffers.Offset {
  BuildActionMetadata.startBuildActionMetadata(builder);
  BuildActionMetadata.addType(builder, type);
  BuildActionMetadata.addCost(builder, cost);
  BuildActionMetadata.addBuildCooldown(builder, buildCooldown);
  return BuildActionMetadata.endBuildActionMetadata(builder);
}
}

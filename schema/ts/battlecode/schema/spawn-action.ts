// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

import { RobotType } from '../../battlecode/schema/robot-type';


/**
 * Indicate that this robot was spawned on this turn
 */
export class SpawnAction {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SpawnAction {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

/**
 * Id of the bot that spawned
 */
id():number {
  return this.bb!.readUint16(this.bb_pos);
}

x():number {
  return this.bb!.readUint16(this.bb_pos + 2);
}

y():number {
  return this.bb!.readUint16(this.bb_pos + 4);
}

team():number {
  return this.bb!.readInt8(this.bb_pos + 6);
}

robotType():RobotType {
  return this.bb!.readInt8(this.bb_pos + 7);
}

static sizeOf():number {
  return 8;
}

static createSpawnAction(builder:flatbuffers.Builder, id: number, x: number, y: number, team: number, robotType: RobotType):flatbuffers.Offset {
  builder.prep(2, 8);
  builder.writeInt8(robotType);
  builder.writeInt8(team);
  builder.writeInt16(y);
  builder.writeInt16(x);
  builder.writeInt16(id);
  return builder.offset();
}

}
